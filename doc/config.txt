Конфигурация
- трябва да се деплойне keycloak-eauth-saml-idp като се сложи в providers директорията на keycloak-a и се викне kc build. 
- в Realm Settings -> themes -> admin console theme трябва да се избере eauth-saml-theme
- identity providers -> add provider -> eauth saml. Създава се конфигурацията от eauth-saml-config.png
	- default-ната конфигурация за Service Provider Entity ID е https://nacidportal/auth/realms/master/broker/eauth-saml/endpoint/descriptor, Но съм я променил на http://94.155.141.112:9994/auth/realms/master/broker/eauth-saml/endpoint/descriptor
	тъй като това урл трябва да е достъпно отвън, защото eauth.egov.bg го call-ват за да прочетат service descriptor-a. В случая първото nacidportal/auth се вижда отвън с 94.155.141.112:9994/auth
	- тъй като в response-a от eauth няма нищо много уникално, слагам personIdentifier-a като principal. За целта PrincipalType = Attribute[Name], a principal attribute е urn:egov:bg:eauth:2.0:attributes:personIdentifier
	- специфични атрибути за eauth
		- Requested Service Service
		- Requested Service Provider
		- Level Of Assurance - LOW / SUBSTANTIAL / HIGH
		- Requested attributes - списък с допълнителни атрибути, които могат да се поискат от сървиса. Списъка се намира малко по-надолу. Синтаксиса е във вида на FriendlyName=email;Name=urn:egov:bg:eauth:2.0:attributes:email;NameFormat=urn:oasis:names:tc:saml2:2.0:attrname-format:uri;isRequired=true;value=urn:egov:bg:eauth:2.0:attributes:email
		Всеки атрибут се дефинира на нов ред, като неговите податрибути се разделят с ; Горния пример генерира xml от вида на 
		<egovbga:RequestedAttribute FriendlyName="email" Name="urn:egov:bg:eauth:2.0:attributes:email" NameFormat="urn:oasis:names:tc:saml2:2.0:attrname-format:uri" isRequired="true">
				<egovbga:AttributeValue>urn:egov:bg:eauth:2.0:attributes:email</egovbga:AttributeValue>
			</egovbga:RequestedAttribute>
- identity provider -> mappers. Има 4 mappers
	- email-mapper - той прочита стойността от атрибута urn:egov:bg:eauth:2.0:attributes:email и я записва в email attribute-a на потребителя - email-mapper.png
	- username-attribute-mapper - взема email атрибута urn:egov:bg:eauth:2.0:attributes:email и проверява дали в базата има потребител с този мейл. Ако има, му взема username-a и го слага в username attribute-a. Ако няма, взема всичко преди @ и го слага като username - username-attribute-mapper.png
	- eauth-person-names-mapper - прочита urn:egov:bg:eauth:2.0:attributes:personName атрибута от response-a от eauth.egov.bg split-ва го на части и слага всяка една част във атрибути firstName / secondName / lastName. Ако името не се split-не точно на 3 части, слага всичко във firstName - person-names-mapper.png
	- Прочита атрибута urn:egov:bg:eauth:2.0:attributes:personIdentifier и ако започва с PNOBG- слага стойността след PNOBG- като personId атрибут, и NATIONAL_ID като personIdType - person-identifier-mapper.png
	
- Authentication -> First Broker Login -> Review Profile -> Actions - Config -> "Update Profile on First Login" - сложил съм го на on, което ще рече че при първоначално логване с даден подпис, винаги се отваря формата за Update Account Information, независимо дали потребителя съществува или не...


Тъй като person identifier е principal-a, човека дори и да си смени електронния подпис, стига и новия да има същия personIdentifier, той ще може да се логва с него.


списък с допълнителни Атрибути, които могат да се поискат като се попълни "Requested attributes" в конфигурацията на eauth saml idp: 
- urn:egov:bg:eauth:2.0:attributes:personIdentifier
- urn:egov:bg:eauth:2.0:attributes:personName
- urn:egov:bg:eauth:2.0:attributes:email
- urn:egov:bg:eauth:2.0:attributes:phone
- urn:egov:bg:eauth:2.0:attributes:latinName
- urn:egov:bg:eauth:2.0:attributes:birthName
- urn:egov:bg:eauth:2.0:attributes:dateOfBirth
- urn:egov:bg:eauth:2.0:attributes:gender
- urn:egov:bg:eauth:2.0:attributes:placeOfBirth
- urn:egov:bg:eauth:2.0:attributes:X509
- urn:egov:bg:eauth:2.0:attributes:canonicalResidenceAddress


